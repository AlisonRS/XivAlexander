{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://xivalexander/fontconfig.schema.json",
  "title": "Font Generation Configuration",
  "description": "Describe how to generate fdt and tex files that will be used to replace the game's font.",
  "type": "object",
  "properties": {
    "name": {
      "type": "string"
    },
    "revision": {
      "type": "integer",
      "default": 1,
      "minimum": 1
    },
    "description": {
      "type": "string"
    },
    "glyphGap": {
      "type": "integer",
      "default": 1,
      "minimum": 0
    },
    "compactLayout": {
      "description": "Let each glyph have different height to save space.",
      "type": "boolean",
      "default": false
    },
    "textureWidth": {
      "type": "integer",
      "default": 1024
    },
    "textureHeight": {
      "type": "integer",
      "default": 1024
    },
    "textureType": {
      "description": "Use high-quality texture for text.",
      "type": "string",
      "default": "RGBA4444",
      "enum": ["RGBA4444", "RGBA8888"]
    },
    "sources": {
      "description": "Defines font to be used when generating fdt and tex files.",
      "type": "object",
      "patternProperties": {
        "^game:": {
          "type": "object",
          "properties": {
            "indexFile": {
              "description": "Path to index file. If unspecified or null, uses the current installation's 000000.sqpack.index",
              "type": [
                "string",
                "null"
              ]
            },
            "fdtPath": {
              "description": "Inner path to fdt file associated with this font.",
              "type": "string"
            },
            "texturePath": {
              "description": "Pattern of inner path to tex files associated with this font. Use {} as a placeholder for a number between 1 and textureCount.",
              "type": "string"
            },
            "textureCount": {
              "description": "Number of tex files associated with this font.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "fdtPath",
            "texturePath",
            "textureCount"
          ]
        },
        "^dwrite:": {
          "type": "object",
          "properties": {
            "familyName": {
              "description": "Name of font installed on your system.",
              "type": "string"
            },
            "height": {
              "description": "Height of font, in pixels.",
              "type": "number",
              "minimumExclusive": 0
            },
            "weight": {
              "description": "Weight of font, between 1 and 1000.",
              "type": ["integer", "string"],
              "default": 400,
              "minimum": 1,
              "maximum": 1000,
              "enum": ["thin", "extralight", "ultralight", "light", "semilight", "normal", "regular", "medium", "semibold", "demibold", "bold", "extrabold", "ultrabold", "heavy", "black", "extrablack", "ultrablack"]
            },
            "renderMode": {
              "description": "DirectWrite render mode. Refer to https://docs.microsoft.com/en-us/windows/win32/api/dwrite/ne-dwrite-dwrite_rendering_mode",
              "type": "string",
              "enum": [
                "DWRITE_RENDERING_MODE_ALIASED",
                "DWRITE_RENDERING_MODE_GDI_CLASSIC",
                "DWRITE_RENDERING_MODE_GDI_NATURAL",
                "DWRITE_RENDERING_MODE_NATURAL",
                "DWRITE_RENDERING_MODE_NATURAL_SYMMETRIC",
                "DWRITE_RENDERING_MODE_OUTLINE",
                "DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC",
                "DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL",
                "DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL",
                "DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL_SYMMETRIC"
              ],
              "default": "DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL_SYMMETRIC"
            },
            "style": {
              "description": "Style of the font.",
              "type": "string",
              "enum": [
                "DWRITE_FONT_STYLE_NORMAL",
                "DWRITE_FONT_STYLE_OBLIQUE",
                "DWRITE_FONT_STYLE_ITALIC"
              ],
              "default": "DWRITE_FONT_STYLE_NORMAL"
            },
            "stretch": {
              "description": "Stretch of the font.",
              "type": "string",
              "enum": [
                "DWRITE_FONT_STRETCH_ULTRA_CONDENSED",
                "DWRITE_FONT_STRETCH_EXTRA_CONDENSED",
                "DWRITE_FONT_STRETCH_CONDENSED",
                "DWRITE_FONT_STRETCH_SEMI_CONDENSED",
                "DWRITE_FONT_STRETCH_NORMAL",
                "DWRITE_FONT_STRETCH_MEDIUM",
                "DWRITE_FONT_STRETCH_SEMI_EXPANDED",
                "DWRITE_FONT_STRETCH_EXPANDED",
                "DWRITE_FONT_STRETCH_EXTRA_EXPANDED",
                "DWRITE_FONT_STRETCH_ULTRA_EXPANDED"
              ]
            }
          },
          "required": [
            "familyName",
            "height"
          ]
        },
        "^gdi:": {
          "type": "object",
          "properties": {
            "height": {},
            "width": {},
            "escapement": {},
            "orientation": {},
            "weight": {},
            "italic": {},
            "underline": {},
            "strikeOut": {},
            "charSet": {},
            "outPrecision": {},
            "clipPrecision": {},
            "quality": {},
            "pitchAndFamily": {},
            "faceName": {}
          },
          "required": [
            "faceName",
            "height"
          ]
        }
      }
    },
    "ranges": {
      "description": "Defines sets of character ranges to be included (when specified).",
      "type": "object",
      "default": {},
      "patternProperties": {
        "": {
          "description": "Defines a set of character ranges.",
          "type": "object",
          "patternProperties": {
            "": {
              "description": "Defines a character or an endpoint inclusive range of characters. You may use U+#### or 0x#### notation as string.",
              "type": ["string", "integer", "array"],
              "minItems": 1,
              "maxItems": 2,
              "items": {
                "type": [
                  "string",
                  "integer"
                ],
                "pattern": "^(?:(?:[Uu]\\+|0x)[0-9A-Fa-f]+|[0-9]+)"
              },
              "pattern": "^(?:(?:[Uu]\\+|0x)[0-9A-Fa-f]+|[0-9]+)"
            }
          }
        }
      }
    },
    "targets": {
      "description": "Defines maps of the relationships of tex and fdt files to be generated. Use {} as a placeholder for texture index in filenames(keys).",
      "type": "object",
      "patternProperties": {
        "": {
          "description": "Defines fonts to be stored in this set of tex files. Specify filename including .fdt extension as keys.",
          "type": "object",
          "patternProperties": {
            "": {
              "description": "Defines a font.",
              "type": "object",
              "properties": {
                "height": {
                  "type": "number",
                  "minimumExclusive": 0
                },
                "ascent": {
                  "description": "Ascent of the font. If null is given, the maximum ascent among the given sources will be used. If string is given, ascent of the specified font from sources will be used.",
                  "type": [
                    "integer",
                    "string",
                    "null"
                  ],
                  "minimum": 0,
                  "maximum": 255,
                  "default": null
                },
                "lineHeight": {
                  "description": "Line height (ascent + descent + lien gap(external leading)) of the font. If null is given, the maximum line height among the given sources will be used. If string is given, line height of the specified font from sources will be used.",
                  "type": [
                    "integer",
                    "string",
                    "null"
                  ],
                  "minimum": 0,
                  "maximum": 255,
                  "default": null
                },
                "maxGlobalOffsetX": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255,
                  "default": 4
                },
                "globalOffsetY": {
                  "type": "integer",
                  "default": 0,
                  "maximum": 255
                },
                "charactersToKernAcrossFonts": {
                  "type": "string",
                  "default": " "
                },
                "alignToBaseline": {
                  "type": "boolean",
                  "default": true
                },
                "compactLayout": {
                  "description": "Let each glyph have different height to save space. If set, overrides global config.",
                  "type": ["boolean", "null"],
                  "default": null
                },
                "sources": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "ranges": {
                        "description": "If unspecified or null, every characters will be applied.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "default": null,
                        "items": {
                          "type": "string"
                        }
                      },
                      "replace": {
                        "type": "boolean",
                        "default": false
                      },
                      "extendRange": {
                        "description": "Whether to extend the character coverage of this font. If false, then will only replace font if replace is true. If replace is false and this is true, then this entry will do nothing.",
                        "type": "boolean",
                        "default": true
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              },
              "required": [
                "height",
                "sources"
              ]
            }
          }
        }
      }
    }
  },
  "required": [
    "name",
    "sources",
    "targets"
  ]
}